-------- This release --------
Get play-note-prior-instrument working in player/player-play-note

Need to change all sc synthdefs to use the vol parameter like string_sect.sc does now
do not use the levelScale parameter of an envelope

Implement some basic version of core/splice_stop/pause and control/stop_splice

need to fix clj-osc location in sc-osc/deps.edn

Change synths to use OffsetOut

Fix density computetion - It is way off with tst-loop.clj

-------- This release --------

Add midi functions from overtone/src/overtone/midi.clj
  and/or overtone/src/overtone/studio/midi.clj (possibly do this)

if the message system is used, make certain ensemble/ensemble_status.clj catches
  the message and calls stop-ensemble-status to stop the ensemble-status message loop.

Set log settings (dir and level) for sc-osc

check if I want to use blocking or unblocking channels in ensemble_status.clj
currently I use blocking channels if I want to switch to unblocking channels, change
(chan (* 2 (get-setting :num-players))) to (chan (buffer(* 2 (get-setting :num-players))))

If an instrument has a variable release, like woosh, it needs to be taken into account
when scheduling note-off events or even just when calling get-release-millis-from-instrument.
Perhaps remove variable release's and instead add a param so the release can be set by
splice when the synth is played and not changed inside the synth. That way you can always
retrieve the correct release time from the synth

Should there be a limit to the number of times player_play_note/check_prior_event_note_off
should be able to recur?

Change println(s) to data2 level log statements - need to make sure
details print - not just Object IDs

-------- STOPPING SPLICE --------
- Stop scheduling new events. Create a var sched-events and check it before scheduling new notes
- Create a fade-out function that brings the value of volume-adjust down to 0 over a short
  amount of time
- Should Supercollider be stopped?
- Can a splice-pause be created that will pick up where it left off? How will the times
  (event-time, play-time) be effected. Also, since all notes should be stopped, checking
  for prior-note-off should not be done.

-------- LONG TERM --------

- Connect mediapipe to supercollider automatically
- Start up supercollider automatically.
- Do not make a new synth for every note keep 1 synth and retrigger it
- Move sc-osc to a seperate repo and use submodules
- Might want to change melody-info to a record and have accessor methods for the attributes
  instead of passing around a map
- Do I want to move all vars from individual files to a common file so that if I reload the
  file I will not loose the value of the vars? Could this be fixwd using defonce and/or
  have functions for clearing vars?
- Have the ability to load new loop file while playing
- Ability to control loop file from an external controller (grid controller)
